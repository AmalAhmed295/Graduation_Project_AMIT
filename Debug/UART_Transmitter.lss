
UART_Transmitter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000053c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000918  00000000  00000000  00000590  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000472  00000000  00000000  00000ea8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 8a 02 	call	0x514	; 0x514 <main>
  64:	0c 94 9c 02 	jmp	0x538	; 0x538 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_U8SetPinValue>:

	return Local_U8_ErrorState;
}

*/
u8 DIO_U8SetPinValue(u8 Copy_U8Port,u8 Copy_U8PinNumber,u8 Copy_U8Value){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	28 97       	sbiw	r28, 0x08	; 8
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	8a 83       	std	Y+2, r24	; 0x02
  82:	6b 83       	std	Y+3, r22	; 0x03
  84:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_U8_ErrorState=OK;
  86:	81 e0       	ldi	r24, 0x01	; 1
  88:	89 83       	std	Y+1, r24	; 0x01

		if(Copy_U8PinNumber<=DIO_U8_PIN7){
  8a:	8b 81       	ldd	r24, Y+3	; 0x03
  8c:	88 30       	cpi	r24, 0x08	; 8
  8e:	08 f0       	brcs	.+2      	; 0x92 <DIO_U8SetPinValue+0x26>
  90:	f6 c0       	rjmp	.+492    	; 0x27e <DIO_U8SetPinValue+0x212>

	   if(Copy_U8Value==DIO_U8_PIN_LOW){
  92:	8c 81       	ldd	r24, Y+4	; 0x04
  94:	88 23       	and	r24, r24
  96:	09 f0       	breq	.+2      	; 0x9a <DIO_U8SetPinValue+0x2e>
  98:	78 c0       	rjmp	.+240    	; 0x18a <DIO_U8SetPinValue+0x11e>

		   switch(Copy_U8Port){
  9a:	8a 81       	ldd	r24, Y+2	; 0x02
  9c:	28 2f       	mov	r18, r24
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	38 87       	std	Y+8, r19	; 0x08
  a2:	2f 83       	std	Y+7, r18	; 0x07
  a4:	8f 81       	ldd	r24, Y+7	; 0x07
  a6:	98 85       	ldd	r25, Y+8	; 0x08
  a8:	82 30       	cpi	r24, 0x02	; 2
  aa:	91 05       	cpc	r25, r1
  ac:	61 f1       	breq	.+88     	; 0x106 <DIO_U8SetPinValue+0x9a>
  ae:	2f 81       	ldd	r18, Y+7	; 0x07
  b0:	38 85       	ldd	r19, Y+8	; 0x08
  b2:	23 30       	cpi	r18, 0x03	; 3
  b4:	31 05       	cpc	r19, r1
  b6:	34 f4       	brge	.+12     	; 0xc4 <DIO_U8SetPinValue+0x58>
  b8:	8f 81       	ldd	r24, Y+7	; 0x07
  ba:	98 85       	ldd	r25, Y+8	; 0x08
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	91 05       	cpc	r25, r1
  c0:	69 f0       	breq	.+26     	; 0xdc <DIO_U8SetPinValue+0x70>
  c2:	60 c0       	rjmp	.+192    	; 0x184 <DIO_U8SetPinValue+0x118>
  c4:	2f 81       	ldd	r18, Y+7	; 0x07
  c6:	38 85       	ldd	r19, Y+8	; 0x08
  c8:	23 30       	cpi	r18, 0x03	; 3
  ca:	31 05       	cpc	r19, r1
  cc:	89 f1       	breq	.+98     	; 0x130 <DIO_U8SetPinValue+0xc4>
  ce:	8f 81       	ldd	r24, Y+7	; 0x07
  d0:	98 85       	ldd	r25, Y+8	; 0x08
  d2:	84 30       	cpi	r24, 0x04	; 4
  d4:	91 05       	cpc	r25, r1
  d6:	09 f4       	brne	.+2      	; 0xda <DIO_U8SetPinValue+0x6e>
  d8:	40 c0       	rjmp	.+128    	; 0x15a <DIO_U8SetPinValue+0xee>
  da:	54 c0       	rjmp	.+168    	; 0x184 <DIO_U8SetPinValue+0x118>
		   case DIO_U8_PORTA:  CLR_BIT(PORTA,Copy_U8PinNumber);  break;
  dc:	ab e3       	ldi	r26, 0x3B	; 59
  de:	b0 e0       	ldi	r27, 0x00	; 0
  e0:	eb e3       	ldi	r30, 0x3B	; 59
  e2:	f0 e0       	ldi	r31, 0x00	; 0
  e4:	80 81       	ld	r24, Z
  e6:	48 2f       	mov	r20, r24
  e8:	8b 81       	ldd	r24, Y+3	; 0x03
  ea:	28 2f       	mov	r18, r24
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	02 2e       	mov	r0, r18
  f4:	02 c0       	rjmp	.+4      	; 0xfa <DIO_U8SetPinValue+0x8e>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <DIO_U8SetPinValue+0x8a>
  fe:	80 95       	com	r24
 100:	84 23       	and	r24, r20
 102:	8c 93       	st	X, r24
 104:	be c0       	rjmp	.+380    	; 0x282 <DIO_U8SetPinValue+0x216>
		   case DIO_U8_PORTB:  CLR_BIT(PORTB,Copy_U8PinNumber);  break;
 106:	a8 e3       	ldi	r26, 0x38	; 56
 108:	b0 e0       	ldi	r27, 0x00	; 0
 10a:	e8 e3       	ldi	r30, 0x38	; 56
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	48 2f       	mov	r20, r24
 112:	8b 81       	ldd	r24, Y+3	; 0x03
 114:	28 2f       	mov	r18, r24
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	81 e0       	ldi	r24, 0x01	; 1
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	02 2e       	mov	r0, r18
 11e:	02 c0       	rjmp	.+4      	; 0x124 <DIO_U8SetPinValue+0xb8>
 120:	88 0f       	add	r24, r24
 122:	99 1f       	adc	r25, r25
 124:	0a 94       	dec	r0
 126:	e2 f7       	brpl	.-8      	; 0x120 <DIO_U8SetPinValue+0xb4>
 128:	80 95       	com	r24
 12a:	84 23       	and	r24, r20
 12c:	8c 93       	st	X, r24
 12e:	a9 c0       	rjmp	.+338    	; 0x282 <DIO_U8SetPinValue+0x216>
		   case DIO_U8_PORTC:  CLR_BIT(PORTC,Copy_U8PinNumber);  break;
 130:	a5 e3       	ldi	r26, 0x35	; 53
 132:	b0 e0       	ldi	r27, 0x00	; 0
 134:	e5 e3       	ldi	r30, 0x35	; 53
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	48 2f       	mov	r20, r24
 13c:	8b 81       	ldd	r24, Y+3	; 0x03
 13e:	28 2f       	mov	r18, r24
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	02 2e       	mov	r0, r18
 148:	02 c0       	rjmp	.+4      	; 0x14e <DIO_U8SetPinValue+0xe2>
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	0a 94       	dec	r0
 150:	e2 f7       	brpl	.-8      	; 0x14a <DIO_U8SetPinValue+0xde>
 152:	80 95       	com	r24
 154:	84 23       	and	r24, r20
 156:	8c 93       	st	X, r24
 158:	94 c0       	rjmp	.+296    	; 0x282 <DIO_U8SetPinValue+0x216>
		   case DIO_U8_PORTD:  CLR_BIT(PORTD,Copy_U8PinNumber);  break;
 15a:	a2 e3       	ldi	r26, 0x32	; 50
 15c:	b0 e0       	ldi	r27, 0x00	; 0
 15e:	e2 e3       	ldi	r30, 0x32	; 50
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	48 2f       	mov	r20, r24
 166:	8b 81       	ldd	r24, Y+3	; 0x03
 168:	28 2f       	mov	r18, r24
 16a:	30 e0       	ldi	r19, 0x00	; 0
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	02 2e       	mov	r0, r18
 172:	02 c0       	rjmp	.+4      	; 0x178 <DIO_U8SetPinValue+0x10c>
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	0a 94       	dec	r0
 17a:	e2 f7       	brpl	.-8      	; 0x174 <DIO_U8SetPinValue+0x108>
 17c:	80 95       	com	r24
 17e:	84 23       	and	r24, r20
 180:	8c 93       	st	X, r24
 182:	7f c0       	rjmp	.+254    	; 0x282 <DIO_U8SetPinValue+0x216>
		   default:Local_U8_ErrorState=NOK;                     break;
 184:	82 e0       	ldi	r24, 0x02	; 2
 186:	89 83       	std	Y+1, r24	; 0x01
 188:	7c c0       	rjmp	.+248    	; 0x282 <DIO_U8SetPinValue+0x216>
		   }
	   }
	   else if(Copy_U8Value==DIO_U8_PIN_HIGH){
 18a:	8c 81       	ldd	r24, Y+4	; 0x04
 18c:	81 30       	cpi	r24, 0x01	; 1
 18e:	09 f0       	breq	.+2      	; 0x192 <DIO_U8SetPinValue+0x126>
 190:	73 c0       	rjmp	.+230    	; 0x278 <DIO_U8SetPinValue+0x20c>

		   switch(Copy_U8Port){
 192:	8a 81       	ldd	r24, Y+2	; 0x02
 194:	28 2f       	mov	r18, r24
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	3e 83       	std	Y+6, r19	; 0x06
 19a:	2d 83       	std	Y+5, r18	; 0x05
 19c:	8d 81       	ldd	r24, Y+5	; 0x05
 19e:	9e 81       	ldd	r25, Y+6	; 0x06
 1a0:	82 30       	cpi	r24, 0x02	; 2
 1a2:	91 05       	cpc	r25, r1
 1a4:	51 f1       	breq	.+84     	; 0x1fa <DIO_U8SetPinValue+0x18e>
 1a6:	2d 81       	ldd	r18, Y+5	; 0x05
 1a8:	3e 81       	ldd	r19, Y+6	; 0x06
 1aa:	23 30       	cpi	r18, 0x03	; 3
 1ac:	31 05       	cpc	r19, r1
 1ae:	34 f4       	brge	.+12     	; 0x1bc <DIO_U8SetPinValue+0x150>
 1b0:	8d 81       	ldd	r24, Y+5	; 0x05
 1b2:	9e 81       	ldd	r25, Y+6	; 0x06
 1b4:	81 30       	cpi	r24, 0x01	; 1
 1b6:	91 05       	cpc	r25, r1
 1b8:	61 f0       	breq	.+24     	; 0x1d2 <DIO_U8SetPinValue+0x166>
 1ba:	5b c0       	rjmp	.+182    	; 0x272 <DIO_U8SetPinValue+0x206>
 1bc:	2d 81       	ldd	r18, Y+5	; 0x05
 1be:	3e 81       	ldd	r19, Y+6	; 0x06
 1c0:	23 30       	cpi	r18, 0x03	; 3
 1c2:	31 05       	cpc	r19, r1
 1c4:	71 f1       	breq	.+92     	; 0x222 <DIO_U8SetPinValue+0x1b6>
 1c6:	8d 81       	ldd	r24, Y+5	; 0x05
 1c8:	9e 81       	ldd	r25, Y+6	; 0x06
 1ca:	84 30       	cpi	r24, 0x04	; 4
 1cc:	91 05       	cpc	r25, r1
 1ce:	e9 f1       	breq	.+122    	; 0x24a <DIO_U8SetPinValue+0x1de>
 1d0:	50 c0       	rjmp	.+160    	; 0x272 <DIO_U8SetPinValue+0x206>
		   	   case DIO_U8_PORTA: SET_BIT(PORTA,Copy_U8PinNumber);   break;
 1d2:	ab e3       	ldi	r26, 0x3B	; 59
 1d4:	b0 e0       	ldi	r27, 0x00	; 0
 1d6:	eb e3       	ldi	r30, 0x3B	; 59
 1d8:	f0 e0       	ldi	r31, 0x00	; 0
 1da:	80 81       	ld	r24, Z
 1dc:	48 2f       	mov	r20, r24
 1de:	8b 81       	ldd	r24, Y+3	; 0x03
 1e0:	28 2f       	mov	r18, r24
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	02 2e       	mov	r0, r18
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_U8SetPinValue+0x184>
 1ec:	88 0f       	add	r24, r24
 1ee:	99 1f       	adc	r25, r25
 1f0:	0a 94       	dec	r0
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_U8SetPinValue+0x180>
 1f4:	84 2b       	or	r24, r20
 1f6:	8c 93       	st	X, r24
 1f8:	44 c0       	rjmp	.+136    	; 0x282 <DIO_U8SetPinValue+0x216>
		   	   case DIO_U8_PORTB: SET_BIT(PORTB,Copy_U8PinNumber);   break;
 1fa:	a8 e3       	ldi	r26, 0x38	; 56
 1fc:	b0 e0       	ldi	r27, 0x00	; 0
 1fe:	e8 e3       	ldi	r30, 0x38	; 56
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	80 81       	ld	r24, Z
 204:	48 2f       	mov	r20, r24
 206:	8b 81       	ldd	r24, Y+3	; 0x03
 208:	28 2f       	mov	r18, r24
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 2e       	mov	r0, r18
 212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_U8SetPinValue+0x1ac>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	0a 94       	dec	r0
 21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_U8SetPinValue+0x1a8>
 21c:	84 2b       	or	r24, r20
 21e:	8c 93       	st	X, r24
 220:	30 c0       	rjmp	.+96     	; 0x282 <DIO_U8SetPinValue+0x216>
		   	   case DIO_U8_PORTC: SET_BIT(PORTC,Copy_U8PinNumber);   break;
 222:	a5 e3       	ldi	r26, 0x35	; 53
 224:	b0 e0       	ldi	r27, 0x00	; 0
 226:	e5 e3       	ldi	r30, 0x35	; 53
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	80 81       	ld	r24, Z
 22c:	48 2f       	mov	r20, r24
 22e:	8b 81       	ldd	r24, Y+3	; 0x03
 230:	28 2f       	mov	r18, r24
 232:	30 e0       	ldi	r19, 0x00	; 0
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 2e       	mov	r0, r18
 23a:	02 c0       	rjmp	.+4      	; 0x240 <DIO_U8SetPinValue+0x1d4>
 23c:	88 0f       	add	r24, r24
 23e:	99 1f       	adc	r25, r25
 240:	0a 94       	dec	r0
 242:	e2 f7       	brpl	.-8      	; 0x23c <DIO_U8SetPinValue+0x1d0>
 244:	84 2b       	or	r24, r20
 246:	8c 93       	st	X, r24
 248:	1c c0       	rjmp	.+56     	; 0x282 <DIO_U8SetPinValue+0x216>
		   	   case DIO_U8_PORTD: SET_BIT(PORTD,Copy_U8PinNumber);   break;
 24a:	a2 e3       	ldi	r26, 0x32	; 50
 24c:	b0 e0       	ldi	r27, 0x00	; 0
 24e:	e2 e3       	ldi	r30, 0x32	; 50
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	80 81       	ld	r24, Z
 254:	48 2f       	mov	r20, r24
 256:	8b 81       	ldd	r24, Y+3	; 0x03
 258:	28 2f       	mov	r18, r24
 25a:	30 e0       	ldi	r19, 0x00	; 0
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	02 2e       	mov	r0, r18
 262:	02 c0       	rjmp	.+4      	; 0x268 <DIO_U8SetPinValue+0x1fc>
 264:	88 0f       	add	r24, r24
 266:	99 1f       	adc	r25, r25
 268:	0a 94       	dec	r0
 26a:	e2 f7       	brpl	.-8      	; 0x264 <DIO_U8SetPinValue+0x1f8>
 26c:	84 2b       	or	r24, r20
 26e:	8c 93       	st	X, r24
 270:	08 c0       	rjmp	.+16     	; 0x282 <DIO_U8SetPinValue+0x216>
		   	   default:Local_U8_ErrorState=NOK;                      break;
 272:	82 e0       	ldi	r24, 0x02	; 2
 274:	89 83       	std	Y+1, r24	; 0x01
 276:	05 c0       	rjmp	.+10     	; 0x282 <DIO_U8SetPinValue+0x216>
	   }


	   else{

		   Local_U8_ErrorState=NOK;  // Error Value//
 278:	82 e0       	ldi	r24, 0x02	; 2
 27a:	89 83       	std	Y+1, r24	; 0x01
 27c:	02 c0       	rjmp	.+4      	; 0x282 <DIO_U8SetPinValue+0x216>
	       }

		}
	   else{

			Local_U8_ErrorState=NOK;   //Error Pin Number//
 27e:	82 e0       	ldi	r24, 0x02	; 2
 280:	89 83       	std	Y+1, r24	; 0x01

		}

		return Local_U8_ErrorState;
 282:	89 81       	ldd	r24, Y+1	; 0x01
}
 284:	28 96       	adiw	r28, 0x08	; 8
 286:	0f b6       	in	r0, 0x3f	; 63
 288:	f8 94       	cli
 28a:	de bf       	out	0x3e, r29	; 62
 28c:	0f be       	out	0x3f, r0	; 63
 28e:	cd bf       	out	0x3d, r28	; 61
 290:	cf 91       	pop	r28
 292:	df 91       	pop	r29
 294:	08 95       	ret

00000296 <DIO_U8SetPortValue>:
u8 DIO_U8SetPortValue(u8 Copy_U8Port,u8 Copy_U8Value){
 296:	df 93       	push	r29
 298:	cf 93       	push	r28
 29a:	00 d0       	rcall	.+0      	; 0x29c <DIO_U8SetPortValue+0x6>
 29c:	00 d0       	rcall	.+0      	; 0x29e <DIO_U8SetPortValue+0x8>
 29e:	0f 92       	push	r0
 2a0:	cd b7       	in	r28, 0x3d	; 61
 2a2:	de b7       	in	r29, 0x3e	; 62
 2a4:	8a 83       	std	Y+2, r24	; 0x02
 2a6:	6b 83       	std	Y+3, r22	; 0x03
	
	u8 Local_U8_ErrorState=OK;
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	89 83       	std	Y+1, r24	; 0x01

		switch(Copy_U8Port){
 2ac:	8a 81       	ldd	r24, Y+2	; 0x02
 2ae:	28 2f       	mov	r18, r24
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	3d 83       	std	Y+5, r19	; 0x05
 2b4:	2c 83       	std	Y+4, r18	; 0x04
 2b6:	8c 81       	ldd	r24, Y+4	; 0x04
 2b8:	9d 81       	ldd	r25, Y+5	; 0x05
 2ba:	82 30       	cpi	r24, 0x02	; 2
 2bc:	91 05       	cpc	r25, r1
 2be:	d9 f0       	breq	.+54     	; 0x2f6 <DIO_U8SetPortValue+0x60>
 2c0:	2c 81       	ldd	r18, Y+4	; 0x04
 2c2:	3d 81       	ldd	r19, Y+5	; 0x05
 2c4:	23 30       	cpi	r18, 0x03	; 3
 2c6:	31 05       	cpc	r19, r1
 2c8:	34 f4       	brge	.+12     	; 0x2d6 <DIO_U8SetPortValue+0x40>
 2ca:	8c 81       	ldd	r24, Y+4	; 0x04
 2cc:	9d 81       	ldd	r25, Y+5	; 0x05
 2ce:	81 30       	cpi	r24, 0x01	; 1
 2d0:	91 05       	cpc	r25, r1
 2d2:	61 f0       	breq	.+24     	; 0x2ec <DIO_U8SetPortValue+0x56>
 2d4:	1f c0       	rjmp	.+62     	; 0x314 <DIO_U8SetPortValue+0x7e>
 2d6:	2c 81       	ldd	r18, Y+4	; 0x04
 2d8:	3d 81       	ldd	r19, Y+5	; 0x05
 2da:	23 30       	cpi	r18, 0x03	; 3
 2dc:	31 05       	cpc	r19, r1
 2de:	81 f0       	breq	.+32     	; 0x300 <DIO_U8SetPortValue+0x6a>
 2e0:	8c 81       	ldd	r24, Y+4	; 0x04
 2e2:	9d 81       	ldd	r25, Y+5	; 0x05
 2e4:	84 30       	cpi	r24, 0x04	; 4
 2e6:	91 05       	cpc	r25, r1
 2e8:	81 f0       	breq	.+32     	; 0x30a <DIO_U8SetPortValue+0x74>
 2ea:	14 c0       	rjmp	.+40     	; 0x314 <DIO_U8SetPortValue+0x7e>

		case DIO_U8_PORTA : PORTA = Copy_U8Value;      break;
 2ec:	eb e3       	ldi	r30, 0x3B	; 59
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	8b 81       	ldd	r24, Y+3	; 0x03
 2f2:	80 83       	st	Z, r24
 2f4:	11 c0       	rjmp	.+34     	; 0x318 <DIO_U8SetPortValue+0x82>
		case DIO_U8_PORTB : PORTB = Copy_U8Value;      break;
 2f6:	e8 e3       	ldi	r30, 0x38	; 56
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	8b 81       	ldd	r24, Y+3	; 0x03
 2fc:	80 83       	st	Z, r24
 2fe:	0c c0       	rjmp	.+24     	; 0x318 <DIO_U8SetPortValue+0x82>
		case DIO_U8_PORTC : PORTC = Copy_U8Value;      break;
 300:	e5 e3       	ldi	r30, 0x35	; 53
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	8b 81       	ldd	r24, Y+3	; 0x03
 306:	80 83       	st	Z, r24
 308:	07 c0       	rjmp	.+14     	; 0x318 <DIO_U8SetPortValue+0x82>
		case DIO_U8_PORTD : PORTD = Copy_U8Value;      break;
 30a:	e2 e3       	ldi	r30, 0x32	; 50
 30c:	f0 e0       	ldi	r31, 0x00	; 0
 30e:	8b 81       	ldd	r24, Y+3	; 0x03
 310:	80 83       	st	Z, r24
 312:	02 c0       	rjmp	.+4      	; 0x318 <DIO_U8SetPortValue+0x82>
		default: Local_U8_ErrorState=NOK;           break;
 314:	82 e0       	ldi	r24, 0x02	; 2
 316:	89 83       	std	Y+1, r24	; 0x01
		}

		return Local_U8_ErrorState;
 318:	89 81       	ldd	r24, Y+1	; 0x01
}
 31a:	0f 90       	pop	r0
 31c:	0f 90       	pop	r0
 31e:	0f 90       	pop	r0
 320:	0f 90       	pop	r0
 322:	0f 90       	pop	r0
 324:	cf 91       	pop	r28
 326:	df 91       	pop	r29
 328:	08 95       	ret

0000032a <DIO_U8GetPinValue>:
u8 DIO_U8GetPinValue(u8 Copy_U8Port,u8 Copy_U8PinNumber,u8* Copy_PU8Value){
 32a:	df 93       	push	r29
 32c:	cf 93       	push	r28
 32e:	cd b7       	in	r28, 0x3d	; 61
 330:	de b7       	in	r29, 0x3e	; 62
 332:	27 97       	sbiw	r28, 0x07	; 7
 334:	0f b6       	in	r0, 0x3f	; 63
 336:	f8 94       	cli
 338:	de bf       	out	0x3e, r29	; 62
 33a:	0f be       	out	0x3f, r0	; 63
 33c:	cd bf       	out	0x3d, r28	; 61
 33e:	8a 83       	std	Y+2, r24	; 0x02
 340:	6b 83       	std	Y+3, r22	; 0x03
 342:	5d 83       	std	Y+5, r21	; 0x05
 344:	4c 83       	std	Y+4, r20	; 0x04
  u8 Local_U8_ErrorState=OK;
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	89 83       	std	Y+1, r24	; 0x01

  if(Copy_U8PinNumber<=DIO_U8_PIN7){
 34a:	8b 81       	ldd	r24, Y+3	; 0x03
 34c:	88 30       	cpi	r24, 0x08	; 8
 34e:	08 f0       	brcs	.+2      	; 0x352 <DIO_U8GetPinValue+0x28>
 350:	63 c0       	rjmp	.+198    	; 0x418 <DIO_U8GetPinValue+0xee>

  	   switch(Copy_U8Port){
 352:	8a 81       	ldd	r24, Y+2	; 0x02
 354:	28 2f       	mov	r18, r24
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	3f 83       	std	Y+7, r19	; 0x07
 35a:	2e 83       	std	Y+6, r18	; 0x06
 35c:	8e 81       	ldd	r24, Y+6	; 0x06
 35e:	9f 81       	ldd	r25, Y+7	; 0x07
 360:	82 30       	cpi	r24, 0x02	; 2
 362:	91 05       	cpc	r25, r1
 364:	31 f1       	breq	.+76     	; 0x3b2 <DIO_U8GetPinValue+0x88>
 366:	2e 81       	ldd	r18, Y+6	; 0x06
 368:	3f 81       	ldd	r19, Y+7	; 0x07
 36a:	23 30       	cpi	r18, 0x03	; 3
 36c:	31 05       	cpc	r19, r1
 36e:	34 f4       	brge	.+12     	; 0x37c <DIO_U8GetPinValue+0x52>
 370:	8e 81       	ldd	r24, Y+6	; 0x06
 372:	9f 81       	ldd	r25, Y+7	; 0x07
 374:	81 30       	cpi	r24, 0x01	; 1
 376:	91 05       	cpc	r25, r1
 378:	61 f0       	breq	.+24     	; 0x392 <DIO_U8GetPinValue+0x68>
 37a:	4b c0       	rjmp	.+150    	; 0x412 <DIO_U8GetPinValue+0xe8>
 37c:	2e 81       	ldd	r18, Y+6	; 0x06
 37e:	3f 81       	ldd	r19, Y+7	; 0x07
 380:	23 30       	cpi	r18, 0x03	; 3
 382:	31 05       	cpc	r19, r1
 384:	31 f1       	breq	.+76     	; 0x3d2 <DIO_U8GetPinValue+0xa8>
 386:	8e 81       	ldd	r24, Y+6	; 0x06
 388:	9f 81       	ldd	r25, Y+7	; 0x07
 38a:	84 30       	cpi	r24, 0x04	; 4
 38c:	91 05       	cpc	r25, r1
 38e:	89 f1       	breq	.+98     	; 0x3f2 <DIO_U8GetPinValue+0xc8>
 390:	40 c0       	rjmp	.+128    	; 0x412 <DIO_U8GetPinValue+0xe8>
  	   case DIO_U8_PORTA: *Copy_PU8Value=GET_BIT(DIO_U8_PORTA,Copy_U8PinNumber);  break;
 392:	8b 81       	ldd	r24, Y+3	; 0x03
 394:	28 2f       	mov	r18, r24
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	81 e0       	ldi	r24, 0x01	; 1
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	02 2e       	mov	r0, r18
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <DIO_U8GetPinValue+0x7a>
 3a0:	95 95       	asr	r25
 3a2:	87 95       	ror	r24
 3a4:	0a 94       	dec	r0
 3a6:	e2 f7       	brpl	.-8      	; 0x3a0 <DIO_U8GetPinValue+0x76>
 3a8:	81 70       	andi	r24, 0x01	; 1
 3aa:	ec 81       	ldd	r30, Y+4	; 0x04
 3ac:	fd 81       	ldd	r31, Y+5	; 0x05
 3ae:	80 83       	st	Z, r24
 3b0:	35 c0       	rjmp	.+106    	; 0x41c <DIO_U8GetPinValue+0xf2>
  	   case DIO_U8_PORTB: *Copy_PU8Value=GET_BIT(DIO_U8_PORTB,Copy_U8PinNumber);  break;
 3b2:	8b 81       	ldd	r24, Y+3	; 0x03
 3b4:	28 2f       	mov	r18, r24
 3b6:	30 e0       	ldi	r19, 0x00	; 0
 3b8:	82 e0       	ldi	r24, 0x02	; 2
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	02 2e       	mov	r0, r18
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <DIO_U8GetPinValue+0x9a>
 3c0:	95 95       	asr	r25
 3c2:	87 95       	ror	r24
 3c4:	0a 94       	dec	r0
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <DIO_U8GetPinValue+0x96>
 3c8:	81 70       	andi	r24, 0x01	; 1
 3ca:	ec 81       	ldd	r30, Y+4	; 0x04
 3cc:	fd 81       	ldd	r31, Y+5	; 0x05
 3ce:	80 83       	st	Z, r24
 3d0:	25 c0       	rjmp	.+74     	; 0x41c <DIO_U8GetPinValue+0xf2>
  	   case DIO_U8_PORTC: *Copy_PU8Value=GET_BIT(DIO_U8_PORTC,Copy_U8PinNumber);  break;
 3d2:	8b 81       	ldd	r24, Y+3	; 0x03
 3d4:	28 2f       	mov	r18, r24
 3d6:	30 e0       	ldi	r19, 0x00	; 0
 3d8:	83 e0       	ldi	r24, 0x03	; 3
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	02 2e       	mov	r0, r18
 3de:	02 c0       	rjmp	.+4      	; 0x3e4 <DIO_U8GetPinValue+0xba>
 3e0:	95 95       	asr	r25
 3e2:	87 95       	ror	r24
 3e4:	0a 94       	dec	r0
 3e6:	e2 f7       	brpl	.-8      	; 0x3e0 <DIO_U8GetPinValue+0xb6>
 3e8:	81 70       	andi	r24, 0x01	; 1
 3ea:	ec 81       	ldd	r30, Y+4	; 0x04
 3ec:	fd 81       	ldd	r31, Y+5	; 0x05
 3ee:	80 83       	st	Z, r24
 3f0:	15 c0       	rjmp	.+42     	; 0x41c <DIO_U8GetPinValue+0xf2>
  	   case DIO_U8_PORTD: *Copy_PU8Value=GET_BIT(DIO_U8_PORTD,Copy_U8PinNumber);  break;
 3f2:	8b 81       	ldd	r24, Y+3	; 0x03
 3f4:	28 2f       	mov	r18, r24
 3f6:	30 e0       	ldi	r19, 0x00	; 0
 3f8:	84 e0       	ldi	r24, 0x04	; 4
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	02 2e       	mov	r0, r18
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <DIO_U8GetPinValue+0xda>
 400:	95 95       	asr	r25
 402:	87 95       	ror	r24
 404:	0a 94       	dec	r0
 406:	e2 f7       	brpl	.-8      	; 0x400 <DIO_U8GetPinValue+0xd6>
 408:	81 70       	andi	r24, 0x01	; 1
 40a:	ec 81       	ldd	r30, Y+4	; 0x04
 40c:	fd 81       	ldd	r31, Y+5	; 0x05
 40e:	80 83       	st	Z, r24
 410:	05 c0       	rjmp	.+10     	; 0x41c <DIO_U8GetPinValue+0xf2>
  	   default:Local_U8_ErrorState=NOK;                    break;
 412:	82 e0       	ldi	r24, 0x02	; 2
 414:	89 83       	std	Y+1, r24	; 0x01
 416:	02 c0       	rjmp	.+4      	; 0x41c <DIO_U8GetPinValue+0xf2>
  	   }
  }
  	   else{

  		 Local_U8_ErrorState=NOK;
 418:	82 e0       	ldi	r24, 0x02	; 2
 41a:	89 83       	std	Y+1, r24	; 0x01
  	   }

  return Local_U8_ErrorState;
 41c:	89 81       	ldd	r24, Y+1	; 0x01
}
 41e:	27 96       	adiw	r28, 0x07	; 7
 420:	0f b6       	in	r0, 0x3f	; 63
 422:	f8 94       	cli
 424:	de bf       	out	0x3e, r29	; 62
 426:	0f be       	out	0x3f, r0	; 63
 428:	cd bf       	out	0x3d, r28	; 61
 42a:	cf 91       	pop	r28
 42c:	df 91       	pop	r29
 42e:	08 95       	ret

00000430 <PORT_voidInit>:
#include"PORT_config.h"
#include"PORT_private.h"
#include"PORT_interface.h"
#include"PORT_reg.h"

void PORT_voidInit(void){
 430:	df 93       	push	r29
 432:	cf 93       	push	r28
 434:	cd b7       	in	r28, 0x3d	; 61
 436:	de b7       	in	r29, 0x3e	; 62
  
  DDRA= PORTA_DIR;
 438:	ea e3       	ldi	r30, 0x3A	; 58
 43a:	f0 e0       	ldi	r31, 0x00	; 0
 43c:	10 82       	st	Z, r1
  DDRB= PORTB_DIR;
 43e:	e7 e3       	ldi	r30, 0x37	; 55
 440:	f0 e0       	ldi	r31, 0x00	; 0
 442:	10 82       	st	Z, r1
  DDRC= PORTC_DIR;
 444:	e4 e3       	ldi	r30, 0x34	; 52
 446:	f0 e0       	ldi	r31, 0x00	; 0
 448:	10 82       	st	Z, r1
  DDRD= PORTD_DIR;
 44a:	e1 e3       	ldi	r30, 0x31	; 49
 44c:	f0 e0       	ldi	r31, 0x00	; 0
 44e:	84 e0       	ldi	r24, 0x04	; 4
 450:	80 83       	st	Z, r24

  PORTA = PORTA_INITIAL_VAL;
 452:	eb e3       	ldi	r30, 0x3B	; 59
 454:	f0 e0       	ldi	r31, 0x00	; 0
 456:	10 82       	st	Z, r1
  PORTB = PORTB_INITIAL_VAL;
 458:	e8 e3       	ldi	r30, 0x38	; 56
 45a:	f0 e0       	ldi	r31, 0x00	; 0
 45c:	10 82       	st	Z, r1
  PORTC = PORTC_INITIAL_VAL;
 45e:	e5 e3       	ldi	r30, 0x35	; 53
 460:	f0 e0       	ldi	r31, 0x00	; 0
 462:	10 82       	st	Z, r1
  PORTD = PORTD_INITIAL_VAL;
 464:	e2 e3       	ldi	r30, 0x32	; 50
 466:	f0 e0       	ldi	r31, 0x00	; 0
 468:	10 82       	st	Z, r1
	
}
 46a:	cf 91       	pop	r28
 46c:	df 91       	pop	r29
 46e:	08 95       	ret

00000470 <UART_VoidInit>:
#include"UART_reg.h"
#include"UART_config.h"


void UART_VoidInit(void)
{
 470:	df 93       	push	r29
 472:	cf 93       	push	r28
 474:	0f 92       	push	r0
 476:	cd b7       	in	r28, 0x3d	; 61
 478:	de b7       	in	r29, 0x3e	; 62

	u8 Local_U8UCSRCVal=0;
 47a:	19 82       	std	Y+1, r1	; 0x01

	/* set bit 7 for UCSRC register select  */
	SET_BIT(Local_U8UCSRCVal,UCSRC_URSEL);
 47c:	89 81       	ldd	r24, Y+1	; 0x01
 47e:	80 68       	ori	r24, 0x80	; 128
 480:	89 83       	std	Y+1, r24	; 0x01

	/* 8 data bits character size */
	SET_BIT(Local_U8UCSRCVal,UCSRC_UCSZ0);
 482:	89 81       	ldd	r24, Y+1	; 0x01
 484:	82 60       	ori	r24, 0x02	; 2
 486:	89 83       	std	Y+1, r24	; 0x01
	SET_BIT(Local_U8UCSRCVal,UCSRC_UCSZ1);
 488:	89 81       	ldd	r24, Y+1	; 0x01
 48a:	84 60       	ori	r24, 0x04	; 4
 48c:	89 83       	std	Y+1, r24	; 0x01

	/* send the value to the register*/
	UCSRC= Local_U8UCSRCVal;
 48e:	e0 e4       	ldi	r30, 0x40	; 64
 490:	f0 e0       	ldi	r31, 0x00	; 0
 492:	89 81       	ldd	r24, Y+1	; 0x01
 494:	80 83       	st	Z, r24

	/* 9600 bps on system freq 16MHZ*/
	UBRRL= 103;
 496:	e9 e2       	ldi	r30, 0x29	; 41
 498:	f0 e0       	ldi	r31, 0x00	; 0
 49a:	87 e6       	ldi	r24, 0x67	; 103
 49c:	80 83       	st	Z, r24

	    /* Receiver Enable */
	SET_BIT(UCSRB,UCSRB_RXEN);
 49e:	aa e2       	ldi	r26, 0x2A	; 42
 4a0:	b0 e0       	ldi	r27, 0x00	; 0
 4a2:	ea e2       	ldi	r30, 0x2A	; 42
 4a4:	f0 e0       	ldi	r31, 0x00	; 0
 4a6:	80 81       	ld	r24, Z
 4a8:	80 61       	ori	r24, 0x10	; 16
 4aa:	8c 93       	st	X, r24
	
	   /* Transmitter Enable */
	SET_BIT(UCSRB,UCSRB_TXEN);
 4ac:	aa e2       	ldi	r26, 0x2A	; 42
 4ae:	b0 e0       	ldi	r27, 0x00	; 0
 4b0:	ea e2       	ldi	r30, 0x2A	; 42
 4b2:	f0 e0       	ldi	r31, 0x00	; 0
 4b4:	80 81       	ld	r24, Z
 4b6:	88 60       	ori	r24, 0x08	; 8
 4b8:	8c 93       	st	X, r24

}
 4ba:	0f 90       	pop	r0
 4bc:	cf 91       	pop	r28
 4be:	df 91       	pop	r29
 4c0:	08 95       	ret

000004c2 <UART_VoidSendChar>:
void UART_VoidSendChar(u8 Copy_U8Char)
{
 4c2:	df 93       	push	r29
 4c4:	cf 93       	push	r28
 4c6:	0f 92       	push	r0
 4c8:	cd b7       	in	r28, 0x3d	; 61
 4ca:	de b7       	in	r29, 0x3e	; 62
 4cc:	89 83       	std	Y+1, r24	; 0x01
	
	while(GET_BIT(UCSRA,UCSRA_UDRE)==0);
 4ce:	eb e2       	ldi	r30, 0x2B	; 43
 4d0:	f0 e0       	ldi	r31, 0x00	; 0
 4d2:	80 81       	ld	r24, Z
 4d4:	82 95       	swap	r24
 4d6:	86 95       	lsr	r24
 4d8:	87 70       	andi	r24, 0x07	; 7
 4da:	88 2f       	mov	r24, r24
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	81 70       	andi	r24, 0x01	; 1
 4e0:	90 70       	andi	r25, 0x00	; 0
 4e2:	00 97       	sbiw	r24, 0x00	; 0
 4e4:	a1 f3       	breq	.-24     	; 0x4ce <UART_VoidSendChar+0xc>
	UDR= Copy_U8Char;
 4e6:	ec e2       	ldi	r30, 0x2C	; 44
 4e8:	f0 e0       	ldi	r31, 0x00	; 0
 4ea:	89 81       	ldd	r24, Y+1	; 0x01
 4ec:	80 83       	st	Z, r24

}
 4ee:	0f 90       	pop	r0
 4f0:	cf 91       	pop	r28
 4f2:	df 91       	pop	r29
 4f4:	08 95       	ret

000004f6 <UART_U8ReceiveChar>:
u8 UART_U8ReceiveChar(void)
{
 4f6:	df 93       	push	r29
 4f8:	cf 93       	push	r28
 4fa:	cd b7       	in	r28, 0x3d	; 61
 4fc:	de b7       	in	r29, 0x3e	; 62
	while(GET_BIT(UCSRA,UCSRA_RXC)==0);
 4fe:	eb e2       	ldi	r30, 0x2B	; 43
 500:	f0 e0       	ldi	r31, 0x00	; 0
 502:	80 81       	ld	r24, Z
 504:	88 23       	and	r24, r24
 506:	dc f7       	brge	.-10     	; 0x4fe <UART_U8ReceiveChar+0x8>
	return UDR;
 508:	ec e2       	ldi	r30, 0x2C	; 44
 50a:	f0 e0       	ldi	r31, 0x00	; 0
 50c:	80 81       	ld	r24, Z
	
}
 50e:	cf 91       	pop	r28
 510:	df 91       	pop	r29
 512:	08 95       	ret

00000514 <main>:
#include"UART_interface.h"
#include"PORT_interface.h"
#include"DIO_interface.h"

void main(void)
{
 514:	df 93       	push	r29
 516:	cf 93       	push	r28
 518:	0f 92       	push	r0
 51a:	cd b7       	in	r28, 0x3d	; 61
 51c:	de b7       	in	r29, 0x3e	; 62

	u8 Local_U8SendedChar;

	UART_VoidInit();
 51e:	0e 94 38 02 	call	0x470	; 0x470 <UART_VoidInit>

	while(1){
		Local_U8SendedChar = DIO_U8GetPinValue(DIO_U8_PORTD,DIO_U8_PIN2,DIO_U8_PIN_HIGH);
 522:	84 e0       	ldi	r24, 0x04	; 4
 524:	62 e0       	ldi	r22, 0x02	; 2
 526:	41 e0       	ldi	r20, 0x01	; 1
 528:	50 e0       	ldi	r21, 0x00	; 0
 52a:	0e 94 95 01 	call	0x32a	; 0x32a <DIO_U8GetPinValue>
 52e:	89 83       	std	Y+1, r24	; 0x01
		UART_VoidSendChar(Local_U8SendedChar);
 530:	89 81       	ldd	r24, Y+1	; 0x01
 532:	0e 94 61 02 	call	0x4c2	; 0x4c2 <UART_VoidSendChar>
 536:	f5 cf       	rjmp	.-22     	; 0x522 <main+0xe>

00000538 <_exit>:
 538:	f8 94       	cli

0000053a <__stop_program>:
 53a:	ff cf       	rjmp	.-2      	; 0x53a <__stop_program>
